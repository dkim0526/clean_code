Use searchable names
- single-letter names can only be used as local variables inside short methods. The length of a name should correspond to the size of its cope

Use solution domain names
- use computer science(CS) terms, algorithm names, pattern names, math terms, and so forth. It is not wise to draw every name from the problem domain because we don't want our cowerkers to have to run back and forth to the cutomer asking what every name means when they already know the concept by a different name.

Use Problem domain names
- use the name from the problem domain. At least the programmer who maintains your code can ask a domain expert what it means.
- Separting solution and problem domain concepts is part of the job of a good programmer and designer. The code that has moreto do with problem domain concepts should have names drawn from the problem domain.


*************** Data Structure ****************
Array:
/* Average Case */
- Access: O(1)
- Search: O(n)
- Insertion: O(n)
- Deletion: O(n)

/* Worst Case */
- Access: O(1)
- Search: O(n)
- Insertion: O(n)
- Deletion: O(n)

Space Complexity:
/* Worst */
O(n)

Stack:
/* Average Case */
- Access: O(n)
- Search: O(n)
- Insertion: O(1)
- Deletion: O(1)

/* Worst Case */
- Access: O(n)
- Search: O(n)
- Insertion: O(n)
- Deletion: O(n)

Space Complexity:
/* Worst */
O(n)

Queue:
/* Average Case */
- Access: O(1)
- Search: O(n)
- Insertion: O(n)
- Deletion: O(n)

/* Worst Case */
- Access: O(1)
- Search: O(n)
- Insertion:O(n)
- Deletion: O(n)

Space Complexity:
/* Worst */
O(n)

Stack is an abstract data type that serves as a collection of elements, with two principal operations: push, which adds an element
to the collection, and pop, which removes the most recently added element that was not yet removed. The order in which elements
come off a stack gives rise to its alternative name, LIFO(for last in, first out), additionally a peek operation may give access
to the top without modifying the stack.

Queue is a particular kind of abstract data type or collection in which the entities in the collection are kept in order and the principal (or only) operations on the collection are the addition of entities to the rear terminal position, known as enqueue, and 
removal of entities from the front terminal position, known as dequeue.